AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
    "MRI Scheduler Project \n"

Parameters:
  SecurityGroupId: 
    Type: String
    Default: sg-040d55deb79054a53
  SubnetId: 
    Type: String
    Default: subnet-03b34c526bb19ba7a
  PrivateSubnetID: 
    Type: String
    Default: subnet-045a095cc1cc062ea

Globals:
  Function:
    AutoPublishAlias: live
    Handler: index.handler
    MemorySize: 256
    Runtime: python3.7
    Timeout: 20
    Tracing: Active

Resources:
  AccessLogs:
    Type: AWS::Logs::LogGroup

  HttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      AccessLogSettings:
        DestinationArn: !GetAtt AccessLogs.Arn
        Format: $context.requestId $context.requestTime $context.path $context.status $context.responseLatency $context.integrationLatency
      DefaultRouteSettings:
        ThrottlingBurstLimit: 200
      FailOnWarnings: True
      CorsConfiguration: 
        AllowHeaders: 
          - "*"
        AllowMethods: 
          - "*"
        AllowOrigins: 
          - "*"
        ExposeHeaders: 
          - "*"
  
  ThesaurusFileBucket: 
    Type: AWS::S3::Bucket
  
  copyFile: 
    Type: AWS::SSM::Document
    Properties:
      Content:
        schemaVersion: '2.2'
        description: 'Run a script to copy file from S3 onto Linux Instance.'
        parameters:
          fileName:
            type: String
            description: "(Required) Name of file in S3"
          destPath:
            type: String
            description: "(Required) EC2 instance ID"
          bucket: 
            type: String
            description: "(Required) S3 bucket name"
        mainSteps:
        - action: aws:runShellScript
          name: runCommands
          inputs:
            timeoutSeconds: '60'
            runCommand:
            - "aws s3 cp s3://{{bucket}}/{{fileName}} {{destPath}}{{fileName}}"
      DocumentType: Command
      Name: 'copyFile'

  PreprocessLayer:
      Type: AWS::Serverless::LayerVersion
      Properties:
        Description: Spell Checker 
        ContentUri: ./layers/spellchecker.zip 
        CompatibleRuntimes:
          - python3.8
          - python3.7
          - python3.6
        RetentionPolicy: Delete
  
  Psycopg2Layer:
      Type: AWS::Serverless::LayerVersion
      Properties:
        Description: Psycopg2 Library
        ContentUri: ./layers/psycopg2.zip
        CompatibleRuntimes:
          - python3.8
          - python3.7
          - python3.6
        RetentionPolicy: Delete
  
  PostgresLayer:
      Type: AWS::Serverless::LayerVersion
      Properties:
        Description: Postgres Custom Functions
        ContentUri: ./layers/postgresql.zip
        CompatibleRuntimes:
          - python3.8
          - python3.7
          - python3.6
        RetentionPolicy: Delete

  Preprocess:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: ./lambdas/preprocess
      Events:
        ExplicitApi: # warning: creates a public endpoint
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Method: Post
            Path: /parser
            TimeoutInMillis: 29000
            PayloadFormatVersion: "2.0"
            RouteSettings:
              ThrottlingBurstLimit: 100
      Layers: 
        - !Ref PreprocessLayer
        - !Ref Psycopg2Layer
        - !Ref PostgresLayer
      Policies:
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
        - arn:aws:iam::aws:policy/ComprehendFullAccess
        - arn:aws:iam::aws:policy/ComprehendMedicalFullAccess
        - SSMParameterReadPolicy:
            ParameterName: "mri-phsa*"
        - LambdaInvokePolicy:
            FunctionName:
              !Ref RuleProcessing
      VpcConfig: 
        SecurityGroupIds: 
          - !Ref SecurityGroupId 
        SubnetIds:
          - !Ref PrivateSubnetID
      Environment:
        Variables:
          RULE_PROCESSING_LAMBDA: !Ref RuleProcessing

  RuleProcessing:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: ./lambdas/rule_processing
      Layers: 
        - !Ref Psycopg2Layer
        - !Ref PostgresLayer
      Policies:
        - SSMParameterReadPolicy:
            ParameterName: "mri-phsa*"
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
      VpcConfig: 
        SecurityGroupIds: 
          - !Ref SecurityGroupId 
        SubnetIds: 
          - !Ref PrivateSubnetID
    
  QueryRules:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: ./lambdas/query_rules_table
      Events:
        ExplicitApi: # warning: creates a public endpoint
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Method: Post
            Path: /rules
            TimeoutInMillis: 29000
            PayloadFormatVersion: "2.0"
            RouteSettings:
              ThrottlingBurstLimit: 100
      Layers: 
        - !Ref Psycopg2Layer
        - !Ref PostgresLayer
      Policies:
        - SSMParameterReadPolicy:
            ParameterName: "mri-phsa*"
        - LambdaInvokePolicy:
            FunctionName:
              !Ref UpdateWeights
      VpcConfig: 
        SecurityGroupIds: 
          - !Ref SecurityGroupId 
        SubnetIds:
          - !Ref PrivateSubnetID
      Environment:
        Variables:
          UPDATE_WEIGHTS_LAMBDA: !Ref UpdateWeights

  QuerySpellchecker:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: ./lambdas/query_spellchecker
      Events:
        ExplicitApi: # warning: creates a public endpoint
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Method: Post
            Path: /spell
            TimeoutInMillis: 29000
            PayloadFormatVersion: "2.0"
            RouteSettings:
              ThrottlingBurstLimit: 100
      Layers: 
        - !Ref Psycopg2Layer
        - !Ref PostgresLayer
      Policies:
        - SSMParameterReadPolicy:
            ParameterName: "mri-phsa*"
      VpcConfig: 
        SecurityGroupIds: 
          - !Ref SecurityGroupId 
        SubnetIds:
          - !Ref PrivateSubnetID

  QueryConjunctions:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: ./lambdas/query_conjunctions
      Events:
        ExplicitApi: # warning: creates a public endpoint
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Method: Post
            Path: /conjunctions
            TimeoutInMillis: 29000
            PayloadFormatVersion: "2.0"
            RouteSettings:
              ThrottlingBurstLimit: 100
      Layers: 
        - !Ref Psycopg2Layer
        - !Ref PostgresLayer
      Policies:
        - SSMParameterReadPolicy:
            ParameterName: "mri-phsa*"
      VpcConfig: 
        SecurityGroupIds: 
          - !Ref SecurityGroupId 
        SubnetIds:
          - !Ref PrivateSubnetID

  QueryWeights:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: ./lambdas/query_weights
      Events:
        ExplicitApi: # warning: creates a public endpoint
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Method: Post
            Path: /weights
            TimeoutInMillis: 29000
            PayloadFormatVersion: "2.0"
            RouteSettings:
              ThrottlingBurstLimit: 100
      Layers: 
        - !Ref Psycopg2Layer
        - !Ref PostgresLayer
      Policies:
        - SSMParameterReadPolicy:
            ParameterName: "mri-phsa*"
        - LambdaInvokePolicy:
            FunctionName:
              !Ref UpdateWeights
      VpcConfig: 
        SecurityGroupIds: 
          - !Ref SecurityGroupId 
        SubnetIds:
          - !Ref PrivateSubnetID
      Environment:
        Variables:
          UPDATE_WEIGHTS_LAMBDA: !Ref UpdateWeights

  UpdateWeights:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: ./lambdas/update_word_weights
      Layers: 
        - !Ref Psycopg2Layer
        - !Ref PostgresLayer
      Policies:
        - SSMParameterReadPolicy:
            ParameterName: "mri-phsa*"
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
      VpcConfig: 
        SecurityGroupIds: 
          - !Ref SecurityGroupId 
        SubnetIds: 
          - !Ref PrivateSubnetID

  DataResults:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: ./lambdas/results
      Events:
        ExplicitApi: # warning: creates a public endpoint
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Method: Post
            Path: /results
            TimeoutInMillis: 29000
            PayloadFormatVersion: "2.0"
            RouteSettings:
              ThrottlingBurstLimit: 100
      Layers: 
        - !Ref Psycopg2Layer
        - !Ref PostgresLayer
      Policies:
        - SSMParameterReadPolicy:
            ParameterName: "mri-phsa*"
      VpcConfig: 
        SecurityGroupIds: 
          - !Ref SecurityGroupId 
        SubnetIds: 
          - !Ref PrivateSubnetID

  Thesaurus:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: ./lambdas/thesaurus
      Events:
        FileUpload:
          Type: S3
          Properties: 
            Bucket: !Ref ThesaurusFileBucket
            Events: s3:ObjectCreated:*
      Layers: 
        - !Ref Psycopg2Layer
        - !Ref PostgresLayer
      Policies:
        - SSMParameterReadPolicy:
            ParameterName: "mri-phsa*"
        - S3ReadPolicy:
            BucketName: '*'
        - arn:aws:iam::aws:policy/AmazonSSMFullAccess
        - arn:aws:iam::aws:policy/AWSResourceAccessManagerFullAccess
      VpcConfig: 
        SecurityGroupIds: 
          - !Ref SecurityGroupId 
        SubnetIds:
          - !Ref PrivateSubnetID
      Environment:
        Variables:
          DEST_PATH: "/usr/share/pgsql/tsearch_data/" # Path to shared postgresql directory
          SEND_COMMAND_NAME: !Ref copyFile

Outputs:
  Preprocess:
      Value: !GetAtt Preprocess.Arn
  RuleProcessing:
      Value: !GetAtt RuleProcessing.Arn
  QueryRules:
      Value: !GetAtt QueryRules.Arn
  QuerySpellchecker:
      Value: !GetAtt QuerySpellchecker.Arn
  QueryConjunctions: 
      Value: !GetAtt QueryConjunctions.Arn
  QueryWeights:
      Value: !GetAtt QueryWeights.Arn
  UpdateWeights: 
      Value: !GetAtt UpdateWeights.Arn
  DataResults:
      Value: !GetAtt DataResults.Arn
  HttpApiUrl:
      Description: URL of your API endpoint
      Value:
        Fn::Sub: 'https://${HttpApi}.execute-api.${AWS::Region}.${AWS::URLSuffix}/'